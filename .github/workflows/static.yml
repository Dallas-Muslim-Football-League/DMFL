# Name of your workflow
name: Deploy Angular App to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches:
      - master # Or your default branch, e.g., master
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions for the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job handles the deployment
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Sets the deployment URL output
    runs-on: ubuntu-latest # Specifies the runner type

    steps:
      # Step 1: Check out your repository code
      - name: Checkout repository
        uses: actions/checkout@v4 # Uses the official checkout action

      # Step 2: Set up Node.js (Optional, but good practice if you were to add a build step)
      # Since you've already built the app locally, this step is not strictly necessary
      # for just deploying the dist folder. However, if you decide to build in CI later,
      # this would be needed.
      # - name: Set up Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20' # Specify your Node.js version
      #     cache: 'npm' # Optional: caches npm dependencies

      # Step 3: (If you were building in CI) Install dependencies and build
      # This is commented out because you mentioned you already have the dist folder.
      # - name: Install dependencies
      #   run: npm ci
      # - name: Build Angular App
      #   run: npm run build --prod # Or your specific build command

      # Step 4: Configure GitHub Pages
      # This action helps configure Pages to use the uploaded artifact
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step 5: Upload the artifact (your built Angular app)
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Path to the folder to upload.
          path: './dist/dmfl'

      # Step 6: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment # Give this step an ID to refer to its outputs
        uses: actions/deploy-pages@v4 # Uses the official deploy Pages action
