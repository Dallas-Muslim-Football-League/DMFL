# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4 # Using the latest version

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify your Node.js version, e.g., '18', '20', 'lts/*'
          cache: 'npm' # Enable caching for npm dependencies

      # Install project dependencies using npm
      - name: Install dependencies
        run: npm install # This command will install dependencies defined in your package-lock.json or package.json

      # Build the project using npm
      # This command should generate your static files in the 'dist' directory
      - name: Build project
        run: npm run build # Replace 'build' with your actual build script name from package.json if different

      # Configure GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Uploads the artifact from the 'dist' directory
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Path to the directory to upload
          path: './dist/dmfl' # Ensure this path matches your project's build output directory

      # Deploys the uploaded artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
